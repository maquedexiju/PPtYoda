"""
Django settings for ppt_killer project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import configparser
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
FILE_CHARSET = 'utf-8'

PROJECT_CONFIG = configparser.ConfigParser()
PROJECT_CONFIG.read(os.path.join(BASE_DIR, 'config.ini'), encoding='utf-8')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-5i*&q2it(8a2s-a^-47j@5iw-a(e4(%8ih*gfd$1&$m#q8vt&6"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

AUTH_USER_MODEL = 'users.User'

# Application definition

INSTALLED_APPS = [
    'daphne',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'channels',

    'users',
    'project_manage',
    'materials',
    'ppt_page',
    'ppt_template',
    'knowledge_base',
    'project_template'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    }
}

ROOT_URLCONF = "ppt_killer.urls"

ASGI_APPLICATION = "ppt_killer.asgi.application"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "ppt_killer.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# 影响请求头中的 Access-Control-Allow-Origin 字段：服务器返回该字段，告诉浏览器哪些域名可以访问资源。
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    'http://127.0.0.1:3000'
]
CORS_ALLOW_CREDENTIALS = True
# 影响需要 CSRF 保护的视图（如表单提交、敏感操作）
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    'http://127.0.0.1:3000'
]
from corsheaders.defaults import default_headers
CORS_ALLOW_HEADERS = (
    *default_headers,
    "access-control-allow-origin",
)


LLM_BASE_URL = PROJECT_CONFIG.get('LLM', 'LLM_BASE_URL')
LLM_API_KEY = PROJECT_CONFIG.get('LLM', 'LLM_API_KEY')
LLM_MODEL = PROJECT_CONFIG.get('LLM', 'LLM_MODEL')

LLM_IMG_GEN_BASE_URL = PROJECT_CONFIG.get('LLM', 'LLM_IMG_GEN_BASE_URL')
LLM_IMG_GEN_API_KEY = PROJECT_CONFIG.get('LLM', 'LLM_IMG_GEN_API_KEY')
LLM_IMG_GEN_MODEL = PROJECT_CONFIG.get('LLM', 'LLM_IMG_GEN_MODEL')

DATA_UPLOAD_MAX_MEMORY_SIZE = 100 * 1024 * 1024  # 100MB

# 设置向量化
EMBEDDING_METHOD = PROJECT_CONFIG.get('EMBEDDING', 'METHOD').lower()
if EMBEDDING_METHOD == 'chroma':
    from chromadb.utils import embedding_functions
    model_path = PROJECT_CONFIG.get('EMBEDDING', 'MODEL_PATH')
    if os.path.exists(os.path.join(BASE_DIR, model_path)):
        CHROMA_EMBEDDING_FUNCTION = embedding_functions.SentenceTransformerEmbeddingFunction(os.path.join(BASE_DIR, model_path))
    else:
        CHROMA_EMBEDDING_FUNCTION = embedding_functions.SentenceTransformerEmbeddingFunction(model_path)
else:
    pass